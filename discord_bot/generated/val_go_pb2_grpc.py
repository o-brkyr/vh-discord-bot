# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from generated import empty_pb2 as empty__pb2
from generated import val_go_pb2 as val__go__pb2


class ValheimGoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDaySchedule = channel.unary_unary(
                '/ValheimGo/GetDaySchedule',
                request_serializer=val__go__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=val__go__pb2.ScheduleMessage.FromString,
                )
        self.GetWeekSchedule = channel.unary_stream(
                '/ValheimGo/GetWeekSchedule',
                request_serializer=val__go__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=val__go__pb2.ScheduleMessage.FromString,
                )
        self.SetDaySchedule = channel.unary_unary(
                '/ValheimGo/SetDaySchedule',
                request_serializer=val__go__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=val__go__pb2.ScheduleMessage.FromString,
                )
        self.ClearDaySchedule = channel.unary_unary(
                '/ValheimGo/ClearDaySchedule',
                request_serializer=val__go__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )
        self.QueryPlayers = channel.unary_unary(
                '/ValheimGo/QueryPlayers',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=val__go__pb2.QueryPlayersResponse.FromString,
                )
        self.QueryStatus = channel.unary_unary(
                '/ValheimGo/QueryStatus',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=val__go__pb2.QueryStatusResponse.FromString,
                )
        self.ForceStart = channel.unary_unary(
                '/ValheimGo/ForceStart',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )
        self.ForceStop = channel.unary_unary(
                '/ValheimGo/ForceStop',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )
        self.RegisterMember = channel.unary_unary(
                '/ValheimGo/RegisterMember',
                request_serializer=val__go__pb2.RegisterRequest.SerializeToString,
                response_deserializer=val__go__pb2.RegisterResponse.FromString,
                )
        self.RegisterCharacter = channel.unary_unary(
                '/ValheimGo/RegisterCharacter',
                request_serializer=val__go__pb2.RegisterRequest.SerializeToString,
                response_deserializer=val__go__pb2.RegisterResponse.FromString,
                )


class ValheimGoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDaySchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWeekSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDaySchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearDaySchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterCharacter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ValheimGoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDaySchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDaySchedule,
                    request_deserializer=val__go__pb2.ScheduleRequest.FromString,
                    response_serializer=val__go__pb2.ScheduleMessage.SerializeToString,
            ),
            'GetWeekSchedule': grpc.unary_stream_rpc_method_handler(
                    servicer.GetWeekSchedule,
                    request_deserializer=val__go__pb2.ScheduleRequest.FromString,
                    response_serializer=val__go__pb2.ScheduleMessage.SerializeToString,
            ),
            'SetDaySchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDaySchedule,
                    request_deserializer=val__go__pb2.ScheduleRequest.FromString,
                    response_serializer=val__go__pb2.ScheduleMessage.SerializeToString,
            ),
            'ClearDaySchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearDaySchedule,
                    request_deserializer=val__go__pb2.ScheduleRequest.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
            'QueryPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPlayers,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=val__go__pb2.QueryPlayersResponse.SerializeToString,
            ),
            'QueryStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryStatus,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=val__go__pb2.QueryStatusResponse.SerializeToString,
            ),
            'ForceStart': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceStart,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
            'ForceStop': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceStop,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
            'RegisterMember': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterMember,
                    request_deserializer=val__go__pb2.RegisterRequest.FromString,
                    response_serializer=val__go__pb2.RegisterResponse.SerializeToString,
            ),
            'RegisterCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterCharacter,
                    request_deserializer=val__go__pb2.RegisterRequest.FromString,
                    response_serializer=val__go__pb2.RegisterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ValheimGo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ValheimGo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDaySchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/GetDaySchedule',
            val__go__pb2.ScheduleRequest.SerializeToString,
            val__go__pb2.ScheduleMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWeekSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ValheimGo/GetWeekSchedule',
            val__go__pb2.ScheduleRequest.SerializeToString,
            val__go__pb2.ScheduleMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDaySchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/SetDaySchedule',
            val__go__pb2.ScheduleRequest.SerializeToString,
            val__go__pb2.ScheduleMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearDaySchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/ClearDaySchedule',
            val__go__pb2.ScheduleRequest.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/QueryPlayers',
            empty__pb2.Empty.SerializeToString,
            val__go__pb2.QueryPlayersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/QueryStatus',
            empty__pb2.Empty.SerializeToString,
            val__go__pb2.QueryStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/ForceStart',
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/ForceStop',
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/RegisterMember',
            val__go__pb2.RegisterRequest.SerializeToString,
            val__go__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ValheimGo/RegisterCharacter',
            val__go__pb2.RegisterRequest.SerializeToString,
            val__go__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
