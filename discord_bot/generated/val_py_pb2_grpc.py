# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from generated import empty_pb2 as empty__pb2
from generated import val_py_pb2 as val__py__pb2


class ValheimPyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PlayerJoin = channel.unary_unary(
            "/ValheimPy/PlayerJoin",
            request_serializer=val__py__pb2.PlayerRequest.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.PlayerLeave = channel.unary_unary(
            "/ValheimPy/PlayerLeave",
            request_serializer=val__py__pb2.PlayerRequest.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.ServerSave = channel.unary_unary(
            "/ValheimPy/ServerSave",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnStart = channel.unary_unary(
            "/ValheimPy/OnStart",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnStarted = channel.unary_unary(
            "/ValheimPy/OnStarted",
            request_serializer=val__py__pb2.StartedRequest.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnStop = channel.unary_unary(
            "/ValheimPy/OnStop",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnStopped = channel.unary_unary(
            "/ValheimPy/OnStopped",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnLastOrders = channel.unary_unary(
            "/ValheimPy/OnLastOrders",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )
        self.OnError = channel.unary_unary(
            "/ValheimPy/OnError",
            request_serializer=empty__pb2.Empty.SerializeToString,
            response_deserializer=empty__pb2.Empty.FromString,
        )


class ValheimPyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PlayerJoin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PlayerLeave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ServerSave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnStarted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnStopped(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnLastOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def OnError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ValheimPyServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "PlayerJoin": grpc.unary_unary_rpc_method_handler(
            servicer.PlayerJoin,
            request_deserializer=val__py__pb2.PlayerRequest.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "PlayerLeave": grpc.unary_unary_rpc_method_handler(
            servicer.PlayerLeave,
            request_deserializer=val__py__pb2.PlayerRequest.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "ServerSave": grpc.unary_unary_rpc_method_handler(
            servicer.ServerSave,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnStart": grpc.unary_unary_rpc_method_handler(
            servicer.OnStart,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnStarted": grpc.unary_unary_rpc_method_handler(
            servicer.OnStarted,
            request_deserializer=val__py__pb2.StartedRequest.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnStop": grpc.unary_unary_rpc_method_handler(
            servicer.OnStop,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnStopped": grpc.unary_unary_rpc_method_handler(
            servicer.OnStopped,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnLastOrders": grpc.unary_unary_rpc_method_handler(
            servicer.OnLastOrders,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
        "OnError": grpc.unary_unary_rpc_method_handler(
            servicer.OnError,
            request_deserializer=empty__pb2.Empty.FromString,
            response_serializer=empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "ValheimPy", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ValheimPy(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PlayerJoin(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/PlayerJoin",
            val__py__pb2.PlayerRequest.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PlayerLeave(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/PlayerLeave",
            val__py__pb2.PlayerRequest.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ServerSave(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/ServerSave",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnStart(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnStart",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnStarted(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnStarted",
            val__py__pb2.StartedRequest.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnStop(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnStop",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnStopped(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnStopped",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnLastOrders(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnLastOrders",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def OnError(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ValheimPy/OnError",
            empty__pb2.Empty.SerializeToString,
            empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
